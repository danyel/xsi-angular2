<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>parent</artifactId>
        <groupId>be.urpi.software.xsi</groupId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>

    <groupId>be.urpi.software.xsi.ui</groupId>
    <artifactId>ui</artifactId>
    <build>
        <plugins>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <!-- Use the latest released version: https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
                <version>1.0</version>

                <configuration>
                    <installDirectory>target</installDirectory>
                </configuration>

                <executions>

                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                            <nodeVersion>v6.2.2</nodeVersion>
                            <npmVersion>3.9.5</npmVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <!-- Optional configuration which provides for running any npm command -->
                        <configuration>
                            <!--
                            <arguments>install - -maxsockets 5 - -registry https://apvlcis01.mme.mazdaeur.com/artifactory/api/npm/npm - -cafile mazdaeur-merged-ca-bundle.crt</arguments>
                            -->
                            <!-- Ensure our repository is used. We need also to have some trusted certificates for that -->
                            <arguments>install</arguments>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <!-- Angular CLI Build -->
            <!-- WARNING : to make the TypesScript compiler work behind a proxy you need to create a .typingsrc file with content :
            {
            "proxy": "http://vanrompaeyd:*****@tsproxy.mme.mazdaeur.com:8080",
            "rejectUnauthorized" : false
            }
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>angular-cli-build</id>
                        <phase>generate-resources</phase>
                        <configuration>
                            <executable>target/node/node</executable>
                            <arguments>
                                <argument>node_modules/angular-cli/bin/ng</argument>
                                <argument>build</argument>
                                <argument>--prod</argument>
                                <argument>--env=prod</argument>
                            </arguments>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <warSourceDirectory>
                        ${basedir}/dist
                    </warSourceDirectory>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>